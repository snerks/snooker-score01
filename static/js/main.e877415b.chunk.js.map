{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","redsRemaining","setRedsRemaining","pointsRemaining","setPointsRemaining","pointsRemainingForOtherPlayer","setPointsRemainingForOtherPlayer","playerPoints","setPlayerPoints","playerNumber","setPlayerNumber","isFinalRedColourGone","setIsFinalRedColourGone","isRedOn","setIsRedOn","isYellowOn","setIsYellowOn","isGreenOn","setIsGreenOn","isBrownOn","setIsBrownOn","isBlueOn","setIsBlueOn","isPinkOn","setIsPinkOn","isBlackOn","setIsBlackOn","isGameOver","setIsGameOver","wasLastShotAFoul","setWasLastShotAFoul","getOtherPlayerIndex","getOtherPlayerNumber","potRed","potBall","areSnookersRequired","foul","value","noFoul","className","onClick","style","border","width","color","marginTop","backgroundColor","onClickCapture","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e877415b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\n\r\nconst App = () => {\r\n  const [redsRemaining, setRedsRemaining] = useState(15);\r\n\r\n  const [pointsRemaining, setPointsRemaining] = useState(147);\r\n  const [pointsRemainingForOtherPlayer, setPointsRemainingForOtherPlayer] = useState(147);\r\n\r\n  const [playerPoints, setPlayerPoints] = useState([0, 0]);\r\n  const [playerNumber, setPlayerNumber] = useState(0);\r\n\r\n  const [isFinalRedColourGone, setIsFinalRedColourGone] = useState(false);\r\n\r\n  const [isRedOn, setIsRedOn] = useState(true);\r\n  const [isYellowOn, setIsYellowOn] = useState(true);\r\n  const [isGreenOn, setIsGreenOn] = useState(true);\r\n  const [isBrownOn, setIsBrownOn] = useState(true);\r\n  const [isBlueOn, setIsBlueOn] = useState(true);\r\n  const [isPinkOn, setIsPinkOn] = useState(true);\r\n  const [isBlackOn, setIsBlackOn] = useState(true);\r\n\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n\r\n  const [wasLastShotAFoul, setWasLastShotAFoul] = useState(false);\r\n\r\n  const newGame = () => {\r\n    setRedsRemaining(15);\r\n    setPointsRemaining(147);\r\n    setPointsRemainingForOtherPlayer(147);\r\n\r\n    setPlayerPoints([0, 0]);\r\n    setPlayerNumber(0);\r\n\r\n    setIsFinalRedColourGone(false);\r\n\r\n    setIsRedOn(true);\r\n\r\n    setIsYellowOn(true);\r\n    setIsGreenOn(true);\r\n    setIsBrownOn(true);\r\n    setIsBlueOn(true);\r\n    setIsPinkOn(true);\r\n    setIsBlackOn(true);\r\n\r\n    setWasLastShotAFoul(false);\r\n\r\n    setIsGameOver(false);\r\n  }\r\n\r\n  const getOtherPlayerIndex = () => {\r\n    return (playerNumber + 1) % 2;\r\n  }\r\n\r\n  const getOtherPlayerNumber = () => {\r\n    return getOtherPlayerIndex() + 1;\r\n  }\r\n\r\n  const setOtherPlayerIndex = () => {\r\n    setPlayerNumber(getOtherPlayerIndex());\r\n  }\r\n\r\n  const playAgain = () => {\r\n    setOtherPlayerIndex();\r\n    noFoul();\r\n  }\r\n\r\n  const concede = () => {\r\n    setIsGameOver(true);\r\n  }\r\n\r\n  const potNothing = () => {\r\n    noFoul();\r\n    setPlayerNumber((playerNumber + 1) % 2);\r\n    setIsRedOn(redsRemaining > 0);\r\n    setPointsRemaining((redsRemaining * 8) + 27);\r\n\r\n    if (redsRemaining === 0) {\r\n      setIsFinalRedColourGone(true);\r\n      setIsYellowOn(true);\r\n      setIsGreenOn(false);\r\n      setIsBrownOn(false);\r\n      setIsBlueOn(false);\r\n      setIsPinkOn(false);\r\n      setIsBlackOn(false);\r\n    }\r\n  }\r\n\r\n  const potRed = () => {\r\n    potBall(1);\r\n    setRedsRemaining(redsRemaining - 1);\r\n\r\n    setPointsRemainingForOtherPlayer(pointsRemainingForOtherPlayer - 8);\r\n  }\r\n\r\n  const potYellow = () => {\r\n    potBall(2);\r\n  }\r\n\r\n  const potGreen = () => {\r\n    potBall(3);\r\n  }\r\n\r\n  const potBrown = () => {\r\n    potBall(4);\r\n  }\r\n\r\n  const potBlue = () => {\r\n    potBall(5);\r\n  }\r\n\r\n  const potPink = () => {\r\n    potBall(6);\r\n  }\r\n\r\n  const potBlack = () => {\r\n    potBall(7);\r\n\r\n    if (isFinalRedColourGone) {\r\n      setIsGameOver(true);\r\n    }\r\n  }\r\n\r\n  const areSnookersRequired = () => {\r\n    return (playerPoints[1 - playerNumber] + pointsRemainingForOtherPlayer) < playerPoints[playerNumber];\r\n  }\r\n\r\n  const foul = (value: number) => {\r\n    if (playerNumber === 0) {\r\n      setPlayerPoints([playerPoints[0], playerPoints[1] + value]);\r\n    } else {\r\n      setPlayerPoints([playerPoints[0] + value, playerPoints[1]]);\r\n    }\r\n\r\n    setPlayerNumber((playerNumber + 1) % 2);\r\n    setIsRedOn(redsRemaining > 0);\r\n\r\n    setWasLastShotAFoul(true);\r\n  }\r\n\r\n  const noFoul = () => {\r\n    setWasLastShotAFoul(false);\r\n  }\r\n\r\n  const potBall = (value: number) => {\r\n    noFoul();\r\n    setPointsRemaining(pointsRemaining - value);\r\n\r\n    if (playerNumber === 0) {\r\n      setPlayerPoints([playerPoints[0] + value, playerPoints[1]]);\r\n    } else {\r\n      setPlayerPoints([playerPoints[0], playerPoints[1] + value]);\r\n    }\r\n\r\n    setIsRedOn(redsRemaining > 0 && value > 1);\r\n\r\n    if (redsRemaining === 0 && value > 1) {\r\n      setIsFinalRedColourGone(true);\r\n      setIsYellowOn(true);\r\n      setIsGreenOn(false);\r\n      setIsBrownOn(false);\r\n      setIsBlueOn(false);\r\n      setIsPinkOn(false);\r\n      setIsBlackOn(false);\r\n    }\r\n\r\n    if (isFinalRedColourGone) {\r\n      setPointsRemainingForOtherPlayer(pointsRemainingForOtherPlayer - value);\r\n\r\n      switch (value) {\r\n        case 2:\r\n          setIsYellowOn(false);\r\n          setIsGreenOn(true);\r\n          setIsBrownOn(false);\r\n          setIsBlueOn(false);\r\n          setIsPinkOn(false);\r\n          setIsBlackOn(false);\r\n          break;\r\n        case 3:\r\n          setIsYellowOn(false);\r\n          setIsGreenOn(false);\r\n          setIsBrownOn(true);\r\n          setIsBlueOn(false);\r\n          setIsPinkOn(false);\r\n          setIsBlackOn(false);\r\n          break;\r\n        case 4:\r\n          setIsYellowOn(false);\r\n          setIsGreenOn(false);\r\n          setIsBrownOn(false);\r\n          setIsBlueOn(true);\r\n          setIsPinkOn(false);\r\n          setIsBlackOn(false);\r\n          break;\r\n        case 5:\r\n          setIsYellowOn(false);\r\n          setIsGreenOn(false);\r\n          setIsBrownOn(false);\r\n          setIsBlueOn(false);\r\n          setIsPinkOn(true);\r\n          setIsBlackOn(false);\r\n          break;\r\n        case 6:\r\n          setIsYellowOn(false);\r\n          setIsGreenOn(false);\r\n          setIsBrownOn(false);\r\n          setIsBlueOn(false);\r\n          setIsPinkOn(false);\r\n          setIsBlackOn(true);\r\n          break;\r\n        case 7:\r\n          setIsYellowOn(false);\r\n          setIsGreenOn(false);\r\n          setIsBrownOn(false);\r\n          setIsBlueOn(false);\r\n          setIsPinkOn(false);\r\n          setIsBlackOn(false);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {!isGameOver &&\r\n          <div>\r\n            Remaining Reds: {redsRemaining}\r\n            <div>\r\n              Pot\r\n          </div>\r\n            <div>\r\n              {isRedOn &&\r\n                <div>\r\n                  <span className=\"ball red\" onClick={() => potRed()}></span>\r\n                  <span className=\"ball red\" onClick={() => potRed()}></span>\r\n                  <span className=\"ball red\" onClick={() => potRed()}></span>\r\n                  <span className=\"ball red\" onClick={() => potRed()}></span>\r\n                  <span className=\"ball red\" onClick={() => potRed()}></span>\r\n                  <span className=\"ball red\" onClick={() => potRed()}></span>\r\n                </div>\r\n              }\r\n              {!isRedOn &&\r\n                <div>\r\n                  {isYellowOn && <span className=\"ball yellow\" onClick={() => potYellow()}></span>}\r\n                  {isGreenOn && <span className=\"ball green\" onClick={() => potGreen()}></span>}\r\n                  {isBrownOn && <span className=\"ball brown\" onClick={() => potBrown()}></span>}\r\n                  {isBlueOn && <span className=\"ball blue\" onClick={() => potBlue()}></span>}\r\n                  {isPinkOn && <span className=\"ball pink\" onClick={() => potPink()}></span>}\r\n                  {isBlackOn && <span className=\"ball black\" onClick={() => potBlack()}></span>}\r\n                </div>\r\n              }\r\n            </div>\r\n            <div>\r\n              No Pot\r\n          </div>\r\n            <div>\r\n              <span className=\"ball white\" onClick={() => potNothing()}></span>\r\n            </div>\r\n            <div>\r\n              Foul\r\n          </div>\r\n            <div>\r\n              <span className=\"ball red\" onClick={() => foul(4)}>4</span>\r\n              {/* <span className=\"ball yellow\" onClick={() => foul(4)}>X</span>\r\n              <span className=\"ball green\" onClick={() => foul(4)}>X</span>\r\n              <span className=\"ball brown\" onClick={() => foul(4)}>X</span> */}\r\n              <span className=\"ball blue\" onClick={() => foul(5)}>5</span>\r\n              <span className=\"ball pink\" onClick={() => foul(6)}>6</span>\r\n              <span className=\"ball black\" onClick={() => foul(7)}>7</span>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {isGameOver && <div>Game Over!</div>}\r\n        <div>\r\n          <div className=\"scores\">\r\n            <table style={{ border: \"1\" }}>\r\n              <thead>\r\n\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td className=\"player player1\">Player 1</td>\r\n                  <td style={{ width: 50, color: \"yellow\" }}>{<span>{playerNumber === 0 ? \"⇨\" : \" \"} </span>}</td>\r\n                  <td><span>{playerPoints[0]}</span></td>\r\n                  <td>-</td>\r\n                  <td><span>{playerPoints[1]}</span></td>\r\n                  <td style={{ width: 50, color: \"yellow\" }}>{<span> {playerNumber === 1 ? \"⇦\" : \" \"}</span>}</td>\r\n                  <td className=\"player player2\">Player 2</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {!isGameOver &&\r\n            <div style={{ marginTop: 15 }}>\r\n              {areSnookersRequired() && <div style={{ backgroundColor: \"orange\" }}>Player {(playerNumber + 1) % 2 === 0 ? 1 : 2} : Snookers Required!!!!</div>}\r\n              {areSnookersRequired() && <div><button onClickCapture={concede}>Player {getOtherPlayerNumber()} Concede</button></div>}\r\n            </div>\r\n          }\r\n          {!isGameOver && wasLastShotAFoul && <div><button onClickCapture={playAgain}>Player {getOtherPlayerNumber()} Play Again</button></div>}\r\n          {!isGameOver &&\r\n            <>\r\n              <div>\r\n                Points Remaining: <span>{pointsRemaining}</span>\r\n              </div>\r\n              <div>\r\n                Points Remaining For Player {(playerNumber + 1) % 2 === 0 ? 1 : 2}: <span>{pointsRemainingForOtherPlayer}</span>\r\n              </div>\r\n            </>\r\n          }\r\n          {isGameOver && <div><button onClickCapture={newGame}>New Game</button></div>}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'core-js';\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}